@model DoctorFAM.Domain.ViewModels.UserPanel.HealthHouse.HomeVisit.FilterHomeVisitViewModel
@using DoctorFAM.Domain.ViewModels.Admin.HealthHouse
@using DoctorFAM.Application.Extensions
@using DoctorFAM.Application.Convertors
@using DoctorFAM.Domain.ViewModels.Common
@using DoctorFAM.Domain.Enums.Request
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedLocalizer> SharedHtmlLocalizer

@{
    ViewData["Title"] = @Localizer["List Of Your Home Visit Requests"];
}

@section Styles
    {

}

@section Scripts
    {
<partial name="_JqueryValidation" />
}

@section Breadcrumb
    {
<li>
    <a asp-action="HealthHouse" asp-controller="Home" asp-area="UserPanel" > خانه سلامت </a>
</li>
<li>
    <a href="javascript:void(0)"> @ViewData["Title"] </a>
</li>
}
<form asp-action="FilterHomeVisitViewModel" asp-controller="HomeVisit" asp-area="UserPanel" id="filter-search" method="get">
    <input type="hidden" asp-for="Page" />
</form>

<div class="row">
    <div class="col-lg-12 col-sm-12">
        <div class="well with-header with-footer table-responsive">
            <div class="header bordered-azure">
                <div class="flex-style">
                    <span>@ViewData["Title"]</span>
                    <span class="red">(@Model.GetShownEntitiesPagesTitle())</span><span>درخواست</span>
                </div>
            </div>

            @if (Model.Entities != null && Model.Entities.Any())
            {
                <table class="table table-hover table-bordered tc vm">
                    <thead class="tc vm">
                        <tr class="tc vm">

                            <th class="tc vm">
                                @Localizer["Request State"]
                            </th>
                            <th class="tc vm">
                                @Localizer["Your chosen date"]
                            </th>
                            <th class="tc vm">
                                @Localizer["Visiting hours"]
                            </th>

                            <th class="tc vm">
                                @Localizer["Options"]
                            </th>
                        </tr>
                    </thead>
                    <tbody class="tc vm">
                        @foreach (var request in Model.Entities)
                        {
                            <tr class="tc vm">

                                <td class="tc vm">
                                    <p class="flex-style-center">

                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.Paid)
                                        {
                                            <span class="mr-8px label label-info"> @Localizer["Paid"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.ConfirmFromDestinationAndWaitingForIssuanceOfDraftInvoice)
                                        {
                                            <span class="mr-8px label label-info"> @Localizer["ConfirmFromDestinationAndWaitingForIssuanceOfDraftInvoice"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.AwaitingThePaymentOfTheInvoiceAmount)
                                        {
                                            <span class="mr-8px label label-warning"> @Localizer["AwaitingThePaymentOfTheInvoiceAmount"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.DeliveryToCourierAndSending)
                                        {
                                            <span class="mr-8px label label-info"> @Localizer["DeliveryToCourierAndSending"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.PreparingTheOrder)
                                        {
                                            <span class="mr-8px label label-info"> @Localizer["DeliveryToCourierAndSending"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.SelectedFromDoctor)
                                        {
                                            <span class="mr-8px label label-warning"> @Localizer["SelectedFromDoctor"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.WaitingForConfirmFromDestination)
                                        {
                                            <span class="mr-8px label label-warning"> @Localizer["WaitingForConfirmFromDestination"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.AcceptFromCustomer)
                                        {
                                            <span class="mr-8px label label-info"> @Localizer["Accepted From Customer"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.Finalized)
                                        {
                                            <span class="mr-8px label label-success" style="    background-image: linear-gradient(#ff00cc, #333399) !important;"> @Localizer["Finalized"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.WaitingForAcceptFromCustomer)
                                        {
                                            <span class="mr-8px label label-warning"> @Localizer["Waiting For Accept From Customer"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.Canceled)
                                        {
                                            <span class="mr-8px label label-danger"> @Localizer["Canceled"] </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.Canceled)
                                        {
                                            <span class="mr-8px label label-danger"> لغوشده  </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.TramsferringToTheBankingPortal)
                                        {
                                            <span class="mr-8px label label-warning"> در انتظار پرداخت   </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.unpaid)
                                        {
                                            <span class="mr-8px label label-warning"> پرداخت نشده  </span>
                                        }
                                        @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.WaitingForCompleteInformationFromUser)
                                        {
                                            <span class="mr-8px label label-warning"> درانتظار تکمیل اطلاعات توسط   </span>
                                        }
                                          @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.WaitingForConfirmFromDestination)
                                        {
                                            <span class="mr-8px label label-warning"> درانتظار تکمیل اطلاعات توسط   </span>
                                        }
                                    </p>
                                </td>
                                <td class="tc vm">
                                    @if (request.PatientRequestDateTimeDetails != null)
                                    {
                                        <p>  @request.PatientRequestDateTimeDetails.SendDate.ToStringShamsiDate() </p>
                                    }
                                    else
                                    {
                                        <p class="label label-danger"> @Localizer["Not Insert"] </p>
                                    }
                                </td>
                                <td class="tc vm">
                                    @if (request.PatientRequestDateTimeDetails != null)
                                    {
                                        <span> @Localizer["Start Date"] @request.PatientRequestDateTimeDetails.StartTime.ToString("00")</span>
                                    }
                                    else
                                    {
                                        <span class="label label-danger"> @Localizer["Not Insert"] </span>
                                    }
                               
                                    @if (request.PatientRequestDateTimeDetails != null)
                                    {
                                        <span>@Localizer["End Date"]  @request.PatientRequestDateTimeDetails.EndTime.ToString("00")</span>
                                    }
                                    else
                                    {
                                        <span class="label label-danger"> @Localizer["Not Insert"] </span>
                                    }
                                </td>

                                <td class="tc vm">
                                    @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.SelectedFromDoctor)
                                    {
                                        <a asp-action="RequestDetail" asp-controller="HomeVisit" asp-area="UserPanel" asp-route-requestId="@request.Id" class="btn btn-azure btn-circle btn-xs"><i class="glyphicon glyphicon-eye-open"></i></a>
                                    }
                                    @if (request.PatientRequestDateTimeDetails != null && request.RequestState == RequestState.Finalized)
                                    {
                                        @if ((request.PatientRequestDateTimeDetails.SendDate.Year == DateTime.Now.Year && DateTime.Now.DayOfYear <= request.PatientRequestDateTimeDetails.SendDate.DayOfYear)
                                       || request.PatientRequestDateTimeDetails.SendDate.Year > DateTime.Now.Year)
                                        {
                                            <button onclick="DeleteAjax(@request.Id, '@Url.Action("RemoveRequest", "HomeVisit", new {area = "UserPanel", requestId = request.Id})')" class="btn btn-danger  btn-xs">@Localizer["Remove Request"]</button>
                                        }
                                    }
                                    @if (request.RequestState == DoctorFAM.Domain.Enums.Request.RequestState.TramsferringToTheBankingPortal)
                                    {
                                        <a asp-action="BankPay" asp-controller="HomeVisit" asp-area="" asp-route-requestId="@request.Id" class="btn btn-success btn-circle btn-xs"><i class="glyphicon glyphicon-usd"></i></a>
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="footer tc">

                    <partial name="_UserPanelPaging" model="@Model.GetCurrentPaging()" />

                </div>
            }
            else
            {
                <partial name="_UserPanelNotFoundPartial" />
            }
        </div>
    </div>
</div>

